global @seed_0 = alloc [i32, 3], {19971231, 19981013, 1000000007}
global @staticvalue_0 = alloc i32, 0
global @a_0 = alloc [i32, 10000], zeroinit
decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()
fun @set(@a_1: *i32, @pos_1: i32, @d_1: i32): i32 { 
%entry:
  %a_1 = alloc *i32
  store @a_1, %a_1
  %pos_1 = alloc i32
  store @pos_1, %pos_1
  %d_1 = alloc i32
  store @d_1, %d_1
  @x_1 = alloc [i32, 31]
  %0 = getelemptr @x_1, 0
  store 1, %0
  %1 = getelemptr @x_1, 0
  %2 = load %1
  %3 = mul %2, 2
  %4 = getelemptr @x_1, 1
  store %3, %4
  %5 = getelemptr @x_1, 1
  %6 = load %5
  %7 = mul %6, 2
  %8 = getelemptr @x_1, 2
  store %7, %8
  %9 = getelemptr @x_1, 2
  %10 = load %9
  %11 = mul %10, 2
  %12 = getelemptr @x_1, 3
  store %11, %12
  %13 = getelemptr @x_1, 3
  %14 = load %13
  %15 = mul %14, 2
  %16 = getelemptr @x_1, 4
  store %15, %16
  %17 = getelemptr @x_1, 4
  %18 = load %17
  %19 = mul %18, 2
  %20 = getelemptr @x_1, 5
  store %19, %20
  %21 = getelemptr @x_1, 5
  %22 = load %21
  %23 = mul %22, 2
  %24 = getelemptr @x_1, 6
  store %23, %24
  %25 = getelemptr @x_1, 6
  %26 = load %25
  %27 = mul %26, 2
  %28 = getelemptr @x_1, 7
  store %27, %28
  %29 = getelemptr @x_1, 7
  %30 = load %29
  %31 = mul %30, 2
  %32 = getelemptr @x_1, 8
  store %31, %32
  %33 = getelemptr @x_1, 8
  %34 = load %33
  %35 = mul %34, 2
  %36 = getelemptr @x_1, 9
  store %35, %36
  %37 = getelemptr @x_1, 9
  %38 = load %37
  %39 = mul %38, 2
  %40 = getelemptr @x_1, 10
  store %39, %40
  @i_1 = alloc i32
  store 10, @i_1
  jump %while_entry0
%while_entry0:
  %41 = load @i_1
  %42 = lt %41, 30
  br %42, %while_body0, %while_end0
%while_body0:
  %43 = load @i_1
  %44 = add %43, 1
  store %44, @i_1
  %45 = load @i_1
  %46 = sub %45, 1
  %47 = getelemptr @x_1, %46
  %48 = load %47
  %49 = mul %48, 2
  %50 = load @i_1
  %51 = getelemptr @x_1, %50
  store %49, %51
  jump %while_entry0
%while_end0:
  @v_1 = alloc i32
  store 0, @v_1
  %52 = load %pos_1
  %53 = div %52, 30
  %54 = ge %53, 10000
  br %54, %if_then0, %if_end0
%if_then0:
  ret 0
%if_end0:
  %55 = load %pos_1
  %56 = div %55, 30
  %57 = load %a_1
  %58 = getptr %57, %56
  %59 = load %58
  %60 = load %pos_1
  %61 = mod %60, 30
  %62 = getelemptr @x_1, %61
  %63 = load %62
  %64 = div %59, %63
  %65 = mod %64, 2
  %66 = load %d_1
  %67 = ne %65, %66
  br %67, %if_then1, %if_end1
%if_then1:
  %68 = load %pos_1
  %69 = div %68, 30
  %70 = load %a_1
  %71 = getptr %70, %69
  %72 = load %71
  %73 = load %pos_1
  %74 = mod %73, 30
  %75 = getelemptr @x_1, %74
  %76 = load %75
  %77 = div %72, %76
  %78 = mod %77, 2
  %79 = eq %78, 0
  br %79, %if_then2, %if_end2
%if_then2:
  %80 = load %d_1
  %81 = eq %80, 1
  br %81, %if_then3, %if_end3
%if_then3:
  %82 = load %pos_1
  %83 = mod %82, 30
  %84 = getelemptr @x_1, %83
  %85 = load %84
  store %85, @v_1
  jump %if_end3
%if_end3:
  jump %if_end2
%if_end2:
  %86 = load %pos_1
  %87 = div %86, 30
  %88 = load %a_1
  %89 = getptr %88, %87
  %90 = load %89
  %91 = load %pos_1
  %92 = mod %91, 30
  %93 = getelemptr @x_1, %92
  %94 = load %93
  %95 = div %90, %94
  %96 = mod %95, 2
  %97 = eq %96, 1
  br %97, %if_then4, %if_end4
%if_then4:
  %98 = load %d_1
  %99 = eq %98, 0
  br %99, %if_then5, %if_end5
%if_then5:
  %100 = load @v_1
  %101 = load %pos_1
  %102 = mod %101, 30
  %103 = getelemptr @x_1, %102
  %104 = load %103
  %105 = sub %100, %104
  store %105, @v_1
  jump %if_end5
%if_end5:
  jump %if_end4
%if_end4:
  jump %if_end1
%if_end1:
  %106 = load %pos_1
  %107 = div %106, 30
  %108 = load %a_1
  %109 = getptr %108, %107
  %110 = load %109
  %111 = load @v_1
  %112 = add %110, %111
  %113 = load %pos_1
  %114 = div %113, 30
  %115 = load %a_1
  %116 = getptr %115, %114
  store %112, %116
  ret 0
} 
fun @rand(): i32 { 
%entry:
  %117 = load @staticvalue_0
  %118 = getelemptr @seed_0, 0
  %119 = load %118
  %120 = mul %117, %119
  %121 = getelemptr @seed_0, 1
  %122 = load %121
  %123 = add %120, %122
  store %123, @staticvalue_0
  %124 = load @staticvalue_0
  %125 = getelemptr @seed_0, 2
  %126 = load %125
  %127 = mod %124, %126
  store %127, @staticvalue_0
  %128 = load @staticvalue_0
  %129 = lt %128, 0
  br %129, %if_then6, %if_end6
%if_then6:
  %130 = getelemptr @seed_0, 2
  %131 = load %130
  %132 = load @staticvalue_0
  %133 = add %131, %132
  store %133, @staticvalue_0
  jump %if_end6
%if_end6:
  %134 = load @staticvalue_0
  ret %134
} 
fun @main(): i32 { 
%entry:
  @n_5 = alloc i32
  %135 = call @getint()
  store %135, @n_5
  %136 = call @getint()
  store %136, @staticvalue_0
  call @starttime()
  @x_5 = alloc i32
  @y_5 = alloc i32
  jump %while_entry1
%while_entry1:
  %137 = load @n_5
  %138 = gt %137, 0
  br %138, %while_body1, %while_end1
%while_body1:
  %139 = load @n_5
  %140 = sub %139, 1
  store %140, @n_5
  %141 = call @rand()
  %142 = mod %141, 300000
  store %142, @x_5
  %143 = call @rand()
  %144 = mod %143, 2
  store %144, @y_5
  %146 = getelemptr @a_0, 0
  %147 = load @x_5
  %148 = load @y_5
  %145 = call @set(%146, %147, %148)
  jump %while_entry1
%while_end1:
  call @stoptime()
  %149 = getelemptr @a_0, 0
  call @putarray(10000, %149)
  ret 0
} 
